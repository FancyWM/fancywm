<UserControl x:Class="FancyWM.Controls.TilingWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FancyWM.Controls" 
             xmlns:res="clr-namespace:FancyWM.Resources"
             xmlns:viewmodels="clr-namespace:FancyWM.ViewModels" 
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:controls="clr-namespace:FancyWM.Controls"
             d:DataContext="{d:DesignInstance Type=viewmodels:TilingWindowViewModel}"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.ContextMenu>
        <ContextMenu x:Name="MoreContextMenu" Placement="Mouse">
            <MenuItem Command="{Binding IgnoreProcessCommand}">
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE82E;" FontSize="15" Margin="0, 0, 10, 0" />
                        <TextBlock Text="{x:Static res:Strings.Overlay_Window_AddRuleForProcess}" />
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Command="{Binding IgnoreClassCommand}">
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <ui:FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE82E;" FontSize="15" Margin="0, 0, 10, 0" />
                        <TextBlock Text="{x:Static res:Strings.Overlay_Window_AddRuleForClass}" />
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
        </ContextMenu>
    </UserControl.ContextMenu>
    <Grid>
        <Border
            TextBlock.FontSize="15" 
            TextBlock.Foreground="White" 
            TextBlock.FontWeight="SemiBold"
            Height="22"
            Margin="0,1,0,0"
            Opacity="0"
            d:Opacity="1"
            BorderThickness="1"
            BorderBrush="{DynamicResource SystemControlBackgroundBaseMediumLowBrush}"
            Background="{DynamicResource SystemControlPageBackgroundAltHighBrush}"
            CornerRadius="{StaticResource ControlCornerRadiusBottom}"
            VerticalAlignment="Top" 
            HorizontalAlignment="Center">
            <Border.RenderTransform>
                <ScaleTransform ScaleX="{DynamicResource DisplayScaling}" ScaleY="{DynamicResource DisplayScaling}" />
            </Border.RenderTransform>
            <Border.OpacityMask>
                <VisualBrush>
                    <VisualBrush.Visual>
                        <Border
                            Background="Black"
                            SnapsToDevicePixels="True"
                            CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}"
                            Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Border}}"
                            Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Border}}"
                        />
                    </VisualBrush.Visual>
                </VisualBrush>
            </Border.OpacityMask>
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ActionsVisibility}" Value="Visible">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                        Storyboard.TargetProperty="(Button.Opacity)" 
                                        From="0" To="1" Duration="0:0:0.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation 
                                        Storyboard.TargetProperty="(Button.Opacity)" 
                                        From="1" To="0" Duration="0:0:0.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border.Effect>
                <DropShadowEffect BlurRadius="4" Direction="-90" ShadowDepth="2" Opacity="0.2" Color="Black" />
            </Border.Effect>
            <ui:SimpleStackPanel Spacing="1" Orientation="Horizontal">
                <ui:SimpleStackPanel.Background>
                    <SolidColorBrush Color="{DynamicResource MicaPrimaryColor}" Opacity="{DynamicResource MicaOpacity}" />
                </ui:SimpleStackPanel.Background>
                <ui:SimpleStackPanel.Resources>
                    <ResourceDictionary>
                        <Cursor x:Key="HandGrabbingCursor">/Resources/hand_grabbing.cur</Cursor>
                        <Style x:Key="ActionButtonStyle" BasedOn="{StaticResource DefaultButtonStyle}" TargetType="Button">
                            <Setter Property="Padding" Value="5,3" />
                            <Setter Property="ui:ControlHelper.CornerRadius" Value="0" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                        </Style>
                        <Style x:Key="ActionButtonStyleWrapper" TargetType="Border">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsMouseCaptureWithin, RelativeSource={RelativeSource Self}}" Value="True" />
                                        <Condition Binding="{Binding IsActionActive}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background" Value="{DynamicResource SystemAccentMediumBrush}" />
                                        <Setter Property="Cursor" Value="{StaticResource HandGrabbingCursor}" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ResourceDictionary>
                </ui:SimpleStackPanel.Resources>
                <Border Style="{StaticResource ActionButtonStyleWrapper}">
                    <Button Style="{StaticResource ActionButtonStyle}" Command="{Binding HorizontalSplitCommand}" PreviewMouseMove="OnHorizontalSplitMouseMove">
                        <Button.ToolTip>
                            <TextBlock TextAlignment="Left">
                                <Run FontWeight="Bold" Text="{x:Static res:Strings.Keybinding_CreateHorizontalPanel_Caption}" />
                                <LineBreak />
                                • <Run Text="{x:Static res:Strings.Overlay_Window_DragActionDetail}" /> 
                            </TextBlock>
                        </Button.ToolTip>
                        <Viewbox Width="12" Height="12" Stretch="Uniform">
                            <controls:SvgIcon Icon="hsplit" Color="{DynamicResource SystemControlForegroundBaseHighBrush}" />
                        </Viewbox>
                    </Button>
                </Border>
                <Border Style="{StaticResource ActionButtonStyleWrapper}">
                    <Button Style="{StaticResource ActionButtonStyle}" Command="{Binding VerticalSplitCommand}" PreviewMouseMove="OnVerticalSplitMouseMove">
                        <Button.ToolTip>
                            <TextBlock TextAlignment="Left">
                                <Run FontWeight="Bold" Text="{x:Static res:Strings.Keybinding_CreateVerticalPanel_Caption}" />
                                <LineBreak />
                                • <Run Text="{x:Static res:Strings.Overlay_Window_DragActionDetail}" /> 
                            </TextBlock>
                        </Button.ToolTip>
                        <Viewbox Width="12" Height="12" Stretch="Uniform">
                            <controls:SvgIcon Icon="vsplit" Color="{DynamicResource SystemControlForegroundBaseHighBrush}" />
                        </Viewbox>
                    </Button>
                </Border>
                <Border Style="{StaticResource ActionButtonStyleWrapper}">
                    <Button Style="{StaticResource ActionButtonStyle}" Command="{Binding StackCommand}" PreviewMouseMove="OnStackMouseMove">
                        <Button.ToolTip>
                            <TextBlock TextAlignment="Left">
                                <Run FontWeight="Bold" Text="{x:Static res:Strings.Keybinding_CreateStackPanel_Caption}" />
                                <LineBreak />
                                • <Run Text="{x:Static res:Strings.Overlay_Window_DragActionDetail}" /> 
                            </TextBlock>
                        </Button.ToolTip>
                        <Viewbox Width="12" Height="12" Stretch="Uniform">
                            <controls:SvgIcon Icon="stack" Color="{DynamicResource SystemControlForegroundBaseHighBrush}" />
                        </Viewbox>
                    </Button>
                </Border>
                <Button Style="{StaticResource ActionButtonStyle}" Command="{Binding PullUpCommand}">
                    <Button.ToolTip>
                        <TextBlock FontWeight="Bold" Text="{x:Static res:Strings.Keybinding_PullWindowUp_Caption}" />
                    </Button.ToolTip>
                    <Viewbox Width="12" Height="12" Stretch="Uniform">
                        <controls:SvgIcon Icon="pull-up" Color="{DynamicResource SystemControlForegroundBaseHighBrush}" />
                    </Viewbox>
                </Button>
                <Button Style="{StaticResource ActionButtonStyle}" Command="{Binding FloatCommand}">
                    <Button.ToolTip>
                        <TextBlock FontWeight="Bold" Text="{x:Static res:Strings.Keybinding_ToggleFloatingMode_Caption}" />
                    </Button.ToolTip>
                    <Viewbox Width="12" Height="12" Stretch="Uniform">
                        <controls:SvgIcon Icon="float" Color="{DynamicResource SystemControlForegroundBaseHighBrush}" />
                    </Viewbox>
                </Button>
                <Button x:Name="MoreButton" Style="{StaticResource ActionButtonStyle}" Click="OnMoreClick">
                    <Button.ToolTip>
                        <TextBlock FontWeight="Bold" Text="{x:Static res:Strings.Overlay_Window_MoreOptions}" />
                    </Button.ToolTip>
                    <ui:FontIcon Width="12" Height="20" VerticalAlignment="Center" FontSize="12" FontFamily="Segoe MDL2 Assets" Glyph="&#xE712;" />
                </Button>
            </ui:SimpleStackPanel>
        </Border>
    </Grid>
</UserControl>
