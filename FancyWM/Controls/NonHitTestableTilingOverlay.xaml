<UserControl x:Class="FancyWM.Controls.NonHitTestableTilingOverlay"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FancyWM.Controls" xmlns:viewmodels="clr-namespace:FancyWM.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:TilingOverlayViewModel}"
             mc:Ignorable="d" 
             IsHitTestVisible="False"
             UseLayoutRounding="True"
             d:DesignHeight="450" d:DesignWidth="800">
    <Canvas>
        <Rectangle
            StrokeThickness="2"
            Opacity="0"
            Visibility="Collapsed"
            RadiusX="{DynamicResource OverlayCornerRadiusPx}"
            RadiusY="{DynamicResource OverlayCornerRadiusPx}"
            Width="{Binding PreviewRectangle.Width}" 
            Height="{Binding PreviewRectangle.Height}"
            Canvas.Left="{Binding PreviewRectangle.Left}"
            Canvas.Top="{Binding PreviewRectangle.Top}">
            <Rectangle.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsPreviewRectangleVisible}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" />
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1" />
                                        <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.1" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Rectangle.Style>
            <Rectangle.Stroke>
                <SolidColorBrush Color="{DynamicResource SystemAccentColorLight2}" Opacity="1" />
            </Rectangle.Stroke>
            <Rectangle.Fill>
                <SolidColorBrush Color="{DynamicResource SystemAccentColorLight1}" Opacity="0.1" />
            </Rectangle.Fill>
        </Rectangle>

        <ItemsControl ItemsSource="{Binding Path=WindowElements}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Rectangle
                        StrokeThickness="2"
                        Opacity="0"
                        RadiusX="{DynamicResource OverlayCornerRadiusPx}"
                        RadiusY="{DynamicResource OverlayCornerRadiusPx}"
                        Width="{Binding ComputedBounds.Width}" 
                        Height="{Binding ComputedBounds.Height}">
                        <Rectangle.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsPreviewVisible}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1" />
                                                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1" />
                                                    <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.1" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                        <Rectangle.Stroke>
                            <SolidColorBrush Color="{DynamicResource SystemAccentColorLight2}" Opacity="1" />
                        </Rectangle.Stroke>
                    </Rectangle>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left" Value="{Binding Path=ComputedBounds.Left}" />
                    <Setter Property="Canvas.Top" Value="{Binding Path=ComputedBounds.Top}" />
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas IsItemsHost="True" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>

        <ItemsControl ItemsSource="{Binding Path=WindowElements}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Rectangle
                        IsHitTestVisible="False"
                        Opacity="{Binding RevealHighlightOpacity}"
                        Width="{Binding ComputedBounds.Width}" 
                        Height="8"
                        Margin="0,0,0,0" 
                        VerticalAlignment="Top" 
                        HorizontalAlignment="Stretch">
                        <Rectangle.Fill>
                            <RadialGradientBrush 
                                GradientOrigin="0.5,0" Center="0.5,0" 
                                RadiusX="0.5" RadiusY="0.5">
                                <GradientStop Color="{DynamicResource SystemAccentColor}" Offset="0" />
                                <GradientStop Color="Transparent" Offset="1.0" />
                            </RadialGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left" Value="{Binding Path=ComputedBounds.Left}" />
                    <Setter Property="Canvas.Top" Value="{Binding Path=ComputedBounds.Top}" />
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas IsItemsHost="True" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </Canvas>
</UserControl>
